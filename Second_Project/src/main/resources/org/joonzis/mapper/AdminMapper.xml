<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.joonzis.mapper.AdminMapper">

    
    <!-- 문제 등록 -->
    <insert id="insertQuestion" parameterType="org.joonzis.domain.QuestionDTO">
        INSERT INTO Question (
            id,
            subject, question_text,
            option_1,
            option_2,
            option_3,
            option_4,
            correct_answer,
            <if test="image_data != null">image_data,</if>
            created_at
        ) VALUES (
            QUESTION_SEQ.NEXTVAL,
            #{subject}, #{question_text},
            #{option_1},
            #{option_2},
            #{option_3},
            #{option_4},
            #{correct_answer},
            <if test="image_data != null">#{image_data, jdbcType=BLOB},</if>
            SYSTIMESTAMP
        )
    </insert>
    
    <!-- 문제 검색 -->
	<select id="getQuestionsBySearch" resultType="org.joonzis.domain.QuestionDTO" parameterType="map">
		SELECT
			id,
			subject,
			question_text,
			option_1,
			option_2,
			option_3,
			option_4,
			correct_answer,
			image_data
		FROM (
			SELECT
				id,
				subject,
				question_text,
				option_1,
				option_2,
				option_3,
				option_4,
				correct_answer,
				image_data,
				ROWNUM AS rn  FROM (
				SELECT
					id,
					subject,
					question_text,
					option_1,
					option_2,
					option_3,
					option_4,
					correct_answer,
					image_data
				FROM Question
				ORDER BY id DESC
			)
		)
		WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{limit}
    </select>

    <select id="getTotalQuestionCount" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM Question
        <where>
            <if test="subjectCode != null and subjectCode != ''">
                subject = #{subjectCode}
            </if>
            <if test="query != null and query != ''">
                and question_text LIKE '%' || #{query} || '%'
            </if>
        </where>
    </select>
    
    <!-- 문제 수정 -->
    <update id="updateQuestion" parameterType="org.joonzis.domain.QuestionDTO">
        UPDATE Question
        SET
        	subject = #{subject},
            question_text = #{question_text},
            option_1 = #{option_1},
            option_2 = #{option_2},
            option_3 = #{option_3},
            option_4 = #{option_4},
            correct_answer = #{correct_answer},
            <if test="image_data != null">
                image_data = #{image_data, jdbcType=BLOB}
            </if>
            <if test="image_data == null">
                image_data = NULL </if>
        WHERE
            id = #{id}
    </update>
    
    <!-- 문제 삭제 -->
    <delete id="deleteQuestions" parameterType="map">
    	DELETE FROM Question WHERE id IN
        <foreach collection="questionIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="subjectCode != null and subjectCode != ''">
            AND subject = #{subjectCode}
        </if>
    </delete>
    
    <!-- 유저 전체 조회 -->
    <select id="selectAllUsers" resultType="org.joonzis.domain.UsersVO">
        SELECT USER_NO, USER_ID, USER_NICK, USER_EMAIL, USER_DATE, USER_POINT, USER_RANK, USER_PLAY_COUNT, USER_1ST_COUNT, USER_PW, ISCHATBANNED, BANNED_TIMESTAMP, AUTH
        FROM USERS
    </select>
    
    <!-- 유저 검색 -->
    <select id="searchUsers" resultType="org.joonzis.domain.UsersVO" parameterType="map">
        SELECT USER_NO, USER_ID, USER_NICK, USER_EMAIL, USER_DATE, USER_POINT, USER_RANK, USER_PLAY_COUNT, USER_1ST_COUNT, USER_PW, ISCHATBANNED, BANNED_TIMESTAMP, AUTH
        FROM USERS
        <where>
            <if test="searchType != null and searchValue != null and searchValue != ''">
                <choose>
                    <when test="searchType == 'userNo'">
                        USER_NO LIKE '%' || #{searchValue} || '%'
                    </when>
                    <when test="searchType == 'userId'">
                        USER_ID LIKE '%' || #{searchValue} || '%'
                    </when>
                    <when test="searchType == 'userNick'">
                        USER_NICK LIKE '%' || #{searchValue} || '%'
                    </when>
                    <when test="searchType == 'userRank'">
                        TO_CHAR(USER_RANK) LIKE '%' || #{searchValue} || '%'
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY USER_NO DESC
    </select>
    
    <!-- 유저 챗밴 현황 조회 -->
    <select id="getUsersChatBanStatus" resultType="org.joonzis.domain.UsersVO" parameterType="map">
        SELECT user_no, ISCHATBANNED, user_nick
        FROM users
        WHERE user_no IN
        <foreach item="userNo" collection="userNos" open="(" separator="," close=")">
            #{userNo}
        </foreach>
    </select>
    
    <!-- 유저 챗밴 적용 -->
    <update id="updateChatBanStatus" parameterType="map">
        UPDATE users
        SET
            ISCHATBANNED = 1,
            BANNED_TIMESTAMP = #{bannedTimestamp}
        WHERE user_no IN
        <foreach item="userNo" collection="userNos" open="(" separator="," close=")">
            #{userNo}
        </foreach>
        AND ISCHATBANNED = 0
    </update>
    
    <!-- 유저 챗밴 해제 -->
    <update id="unbanChatUsers">
        UPDATE USERS
        SET
            ISCHATBANNED = 0,
            BANNED_TIMESTAMP = NULL
        WHERE
            ISCHATBANNED = 1
            AND BANNED_TIMESTAMP IS NOT NULL
            AND BANNED_TIMESTAMP <![CDATA[ <= ]]> (SYSTIMESTAMP - INTERVAL '72' HOUR)
    </update>
    
    
    <!-- 업적 등록 -->
    <insert id="insertAchievement">
        INSERT INTO ACHIEVEMENTS (ach_title, ach_content, ach_reward, ach_type)
        VALUES (
            #{ach_title},
            #{ach_content},
            #{ach_reward},
            #{ach_type, jdbcType=VARCHAR}
        )
    </insert>
    
    <!-- 업적 검색 -->
    <select id="searchAchievements" resultType="org.joonzis.domain.AchievementDTO">
    	SELECT ach_title, ach_content, ach_reward, ach_type
    	FROM (
        	SELECT
            	ach_title, ach_content, ach_reward, ach_type,
            	ROWNUM rn
        	FROM (
            	SELECT ach_title, ach_content, ach_reward, ach_type
            	FROM ACHIEVEMENTS
            	<where>
                	<if test="type != null and type != ''">
                    	ach_type = #{type, jdbcType=VARCHAR} </if>
                	<if test="query != null and query != ''">
                    	AND (ach_title LIKE '%' || #{query, jdbcType=VARCHAR} || '%' OR ach_content LIKE '%' || #{query, jdbcType=VARCHAR} || '%') </if>
            	</where>
            	ORDER BY ach_title ASC
        	)
        	WHERE ROWNUM &lt;= #{offset, jdbcType=NUMERIC} + #{limit, jdbcType=NUMERIC}
    	)
    	WHERE rn > #{offset, jdbcType=NUMERIC}
	</select>
    
    <select id="getTotalAchievementCount" resultType="int">
        SELECT COUNT(*)
        FROM ACHIEVEMENTS
        <where>
            <if test="type != null and type != ''">
                ach_type = #{type}
            </if>
            <if test="query != null and query != ''">
                AND (ach_title LIKE '%' || #{query} || '%' OR ach_content LIKE '%' || #{query} || '%')
            </if>
        </where>
    </select>
    
    <!-- 업적 삭제 -->
    <delete id="deleteAchievementsByTitles">
        DELETE FROM ACHIEVEMENTS
        <where>
            <if test="type != null and type != ''">
                ach_type = #{type}
            </if>
            <if test="titles != null and titles.size > 0">
                AND ach_title IN
                <foreach item="title" collection="titles" open="(" separator="," close=")">
                    #{title}
                </foreach>
            </if>
        </where>
    </delete>
    
    <!-- 아이템 등록 -->
    <insert id="insertItem" parameterType="org.joonzis.domain.ItemVO" useGeneratedKeys="true" keyProperty="item_no">
    	<selectKey keyProperty="item_no" resultType="int" order="BEFORE">
            SELECT SEQ_ITEMS.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO items (
        	item_no,
            item_name,
            item_price,
            image_file_name,
            item_type
        ) VALUES (
        	#{item_no},
            #{item_name},
            #{item_price},
            #{imageFileName},
            #{item_type}
        )
    </insert>
    
    <!-- 아이템 검색 -->
    <select id="searchItems" resultType="org.joonzis.domain.ItemVO" parameterType="map">
    SELECT item_no, item_name, item_price, item_type, image_file_name
    FROM (
        SELECT
            item_no, item_name, item_price, item_type, image_file_name,
            ROWNUM AS rn
        FROM (
            SELECT
                item_no, item_name, item_price, item_type, image_file_name
            FROM items
            WHERE item_type = #{item_type}
            <if test="query != null and query != ''">
                AND item_name LIKE '%' || #{query} || '%'
            </if>
            ORDER BY item_no ASC
        )
        WHERE ROWNUM &lt;= #{offset} + #{limit}
    )
    WHERE rn > #{offset}
	</select>

    <select id="getTotalItemCount" resultType="int">
        SELECT COUNT(*)
        FROM items
        WHERE item_type = #{item_type}
        <if test="query != null and query != ''">
            AND item_name LIKE '%' || #{query} || '%' </if>
    </select>
	
	<!-- 아이템 수정 -->
    <update id="updateItem" parameterType="org.joonzis.domain.ItemVO">
        UPDATE items
        SET
            item_name = #{item_name},
            item_price = #{item_price},
            image_file_name = #{imageFileName}
        WHERE item_no = #{item_no} AND item_type = #{item_type}
    </update>
    
    <!-- 아이템 삭제 -->
    <delete id="deleteItems" parameterType="map">
        DELETE FROM items WHERE item_type = #{itemType} AND item_no IN
        <foreach collection="itemNos" item="itemNo" open="(" separator="," close=")">
            #{itemNo}
        </foreach>
    </delete>
</mapper>