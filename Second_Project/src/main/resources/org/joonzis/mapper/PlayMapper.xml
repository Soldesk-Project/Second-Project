<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.joonzis.mapper.PlayMapper">

	<resultMap id="questionResultMap" type="org.joonzis.domain.QuestionDTO">
        <id property="id" column="id"/>
        <result property="subject" column="subject"/>
        <result property="question_text" column="question_text"/>
        <result property="option_1" column="option_1"/>
        <result property="option_2" column="option_2"/>
        <result property="option_3" column="option_3"/>
        <result property="option_4" column="option_4"/>
        <result property="correct_answer" column="correct_answer"/>
        <result property="image_data" column="image_data"/>
    </resultMap>

	<!-- 카테고리 별 문제 가져오기 -->
	<select id="getQuestionsByCategory" resultMap="questionResultMap" parameterType="map">
	    SELECT *
	    FROM (
	        SELECT *
	        FROM QUESTION
	        WHERE SUBJECT=#{category}
	        ORDER BY DBMS_RANDOM.VALUE
	    )
	    WHERE ROWNUM &lt;= 20
	</select>
	
	
	<!-- 랜덤 모드 가져오기(랭크모드) -->
	<select id="getRandomQuestions" resultMap="questionResultMap">
        SELECT *
        FROM (
            SELECT * FROM QUESTION
            ORDER BY DBMS_RANDOM.VALUE
        )
        WHERE ROWNUM &lt;= 20
    </select>
    
    <update id="increaseRewardPoints">
    	UPDATE USERS 
    	SET
    		USER_POINT = USER_POINT + #{point},
    		USER_RANK = USER_RANK + #{rank_point},
    		USER_PLAY_COUNT = USER_PLAY_COUNT + 1
    	WHERE USER_NICK = #{user_nick}
    </update>
    
    <update id="countFirst">
    	UPDATE USERS
    	SET
    		USER_1ST_COUNT = USER_1ST_COUNT + 1
    	WHERE USER_NICK = #{user_nick}
    </update>
    
    <update id="leavePanalty">
    	UPDATE USERS
    	SET
    		USER_RANK = USER_RANK - 20
    	WHERE USER_NICK = #{user_nick}
    </update>
    
    <insert id="insertHistory" parameterType="org.joonzis.domain.UserQuestionHistoryDTO">
	    INSERT INTO USER_QUESTION_HISTORY VALUES (
	      user_q_seq.NEXTVAL,
	      #{user_nick}, #{question_id}, #{subject},
	      #{selected_answer}, #{correct_answer},
	      #{is_correct,jdbcType=CHAR}, #{submitted_at}, sysdate
		)
	</insert>
    
    
    <select id="getQuestionReviewList" resultType="org.joonzis.domain.UserQuestionHistoryDTO">
    	SELECT 
    		USER_NICK,
    		SUM(CASE WHEN IS_CORRECT='1' THEN 1 ELSE 0 END) AS CORRECT_COUNT,
    		SUBMIT_DATE,
    		SUBMITTED_AT
    	FROM
    		USER_QUESTION_HISTORY
    	WHERE 
    		USER_NICK = #{user_nick}
		GROUP BY 
		    SUBMITTED_AT, USER_NICK, SUBMIT_DATE
		ORDER BY 
		    SUBMIT_DATE DESC
    </select>
    
    
    <select id="getUserQuestionHistory" resultType="org.joonzis.domain.UserQuestionHistoryDTO">
    	SELECT
    		h.user_nick,
		    q.id,
		    q.subject,
		    q.question_text,
		    q.option_1,
		    q.option_2,
		    q.option_3,
		    q.option_4,
		    q.correct_answer,
		    q.image_data,
		    h.selected_answer,
		    h.is_correct
		FROM 
			USER_QUESTION_HISTORY h 
		INNER JOIN
			QUESTION q
		ON 
			h.question_id=q.id
		WHERE
			submitted_at=#{submittedAt}
    </select>
    
     <insert id="saveReport" parameterType="org.joonzis.domain.UserQuestionHistoryDTO">
        INSERT INTO question_report (
            id,
            subject,
            question_text,
            option_1,
            option_2,
            option_3,
            option_4,
            correct_answer,
            image_data,
            report_at,
            user_nick,
            reason
        )
        VALUES (
            SEQ_QUESTION_REPORT.NEXTVAL,
            #{subject},
            #{question_text},
            #{option_1},
            #{option_2},
            #{option_3},
            #{option_4},
            #{correct_answer},
            #{image_data, jdbcType=BLOB},
            SYSDATE,
            #{user_nick},
            #{reason}
        )
    </insert>
    
    <select id="getReportQuestion" resultType="org.joonzis.domain.UserQuestionHistoryDTO" parameterType="map">
		<![CDATA[
		  SELECT * FROM (
		    SELECT a.*, ROWNUM rnum FROM (
		      SELECT * FROM question_report ORDER BY report_at DESC
		    ) a WHERE ROWNUM <= #{offset} + #{size}
		  ) WHERE rnum > #{offset}
		]]>
	</select>
		
	<select id="getReportQuestionCount" resultType="int">
		SELECT COUNT(*) FROM question_report
	</select>
	    
</mapper>