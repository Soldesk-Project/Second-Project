<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.joonzis.mapper.UserMapper">
	 
	 <resultMap id="userInfoDecoMap" type="org.joonzis.domain.UserInfoDecoDTO">
	    <result column="user_no" property="user_no"/>
	    <result column="user_rank" property="user_rank"/>
	    <result column="user_nick" property="user_nick"/>
	    <result column="boundary_class_name" property="boundary_class_name"/>
	    <result column="title_class_name" property="title_class_name"/>
	    <result column="fontcolor_class_name" property="fontcolor_class_name"/>
	    <result column="background_class_name" property="background_class_name"/>
	    <result column="balloon_class_name" property="balloon_class_name"/>
	</resultMap>

	 <!-- Top 10 유저 랭킹 목록 -->
	<select id="getUserRankingList" resultMap="userInfoDecoMap">
	    <![CDATA[
	        SELECT *
			FROM (
			  SELECT 
			    U.USER_NO AS user_no,
			    U.USER_RANK AS user_rank,
			    U.USER_NICK AS user_nick,
			    COALESCE(D.BOUNDARY_CLASS_NAME, 'default-boundary') AS boundary_class_name,
			    COALESCE(D.TITLE_CLASS_NAME, 'default-title') AS title_class_name,
			    COALESCE(D.FONTCOLOR_CLASS_NAME, 'default-color') AS fontcolor_class_name,
			    COALESCE(D.BACKGROUND_CLASS_NAME, 'default-background') AS background_class_name,
			    COALESCE(D.BALLOON_CLASS_NAME, 'default-balloon') AS balloon_class_name
			  FROM USERS U
			  LEFT JOIN USER_DECO D ON U.USER_NO = D.USER_NO
			  ORDER BY U.USER_RANK DESC
			)
			WHERE ROWNUM <= 10
	    ]]>
	</select>
	
	<!-- 모든 아이템 목록 -->
	<select id="getItemList" resultType="org.joonzis.domain.ItemVO">
		SELECT * FROM ITEMS
	</select>
	<!-- 인벤토리 - 카테고리별 아이템 목록 -->
	<select id="getInventoryCategory" resultType="org.joonzis.domain.ItemVO">
	    SELECT *
	    FROM INVENTORY
	    WHERE ITEM_TYPE = #{category}
	      AND USER_NO = #{user_no}
	</select>
	<!-- 보유 아이템 목록 -->
	<select id="getInventory" resultType="org.joonzis.domain.ItemVO">
		SELECT ITEM_NAME
		FROM INVENTORY
		WHERE USER_NO = #{user_no}
	</select>

	<!-- 유저 장식 업데이트 -->
	<update id="updateItem" parameterType="org.joonzis.domain.UserDecoUpdateDTO">
		UPDATE USER_DECO
	    <set>
	        <choose>
	            <when test="item_type == 'background'">
	                BACKGROUND_CLASS_NAME = #{css_class_name}
	            </when>
	            <when test="item_type == 'title'">
	                TITLE_CLASS_NAME = #{css_class_name}
	            </when>
	            <when test="item_type == 'fontColor'">
	                FONTCOLOR_CLASS_NAME = #{css_class_name}
	            </when>
	            <when test="item_type == 'boundary'">
	                BOUNDARY_CLASS_NAME = #{css_class_name}
	            </when>
	            <when test="item_type == 'balloon'">
	                BALLOON_CLASS_NAME = #{css_class_name}
	            </when>
	        </choose>
	    </set>
	    WHERE USER_NO = #{user_no}
	</update>
	
	<!-- userNo로 유저 정보+css 찾기	 -->
	<select id="getUserInfoByUserNo" resultType="org.joonzis.domain.UserInfoDecoDTO">
		SELECT *
		FROM users u
		JOIN user_deco d ON u.user_no = d.user_no
		WHERE u.user_no = #{user_no}
	</select>
	
	<!-- 업적 달성 - 포인트 추가 -->
	<update id="updateUserPoint" parameterType="org.joonzis.domain.UserAchievementDTO">
		UPDATE USERS
	    SET USER_POINT = USER_POINT + #{ach_reward}
	    WHERE USER_NO = #{user_no}
	</update>
	
	
	<!-- 아이템 구매 - 포인트 감소 -->
	<update id="userPointMinus">
		UPDATE USERS
		SET USER_POINT = USER_POINT - #{item_price}
		WHERE USER_NO = #{user_no}
	</update>
	<!-- 아이템 구매 - 인벤토리에 추가 -->
	<insert id="buyItemInventory">
		INSERT INTO INVENTORY (USER_NO, CSS_CLASS_NAME, ITEM_NAME, ITEM_TYPE)
		VALUES (#{user_no}, #{css_class_name}, #{item_name}, #{item_type})
	</insert>
	
	<!-- 리워드 상태 -->
	<select id="getRewardStatus" resultType="org.joonzis.domain.UserRewardVO">
		SELECT *
		FROM USER_REWARDS
		WHERE USER_NO = #{user_no}
	</select>
	<!-- 리워드 상태 업데이트 -->
	<update id="rewardUpdate" parameterType="org.joonzis.domain.UserRewardVO">
		UPDATE USER_REWARDS
		SET BOUNDARY = #{boundary},
			TITLE = #{title},
			FONTCOLOR = #{fontColor},
			BACKGROUND = #{background}
		WHERE USER_NO = #{user_no}
	</update>
	<!-- 리워드 보상 획득 -->
	<insert id="addReward" parameterType="org.joonzis.domain.UserDecoUpdateDTO">
		INSERT INTO INVENTORY (USER_NO, CSS_CLASS_NAME, ITEM_NAME, ITEM_TYPE)
		VALUES (#{user_no}, #{css_class_name}, #{item_name}, #{item_type})
	</insert>
	
	<!-- 회원가입 - 닉네임 중복 확인 -->
	<select id="isUserNickTaken" resultType="int" parameterType="String">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		  FROM USERS
		  WHERE USER_NICK = #{user_nick}
	</select>
	<!-- 회원가입 - 아이디 중복 확인 -->
	<select id="isUserIdTaken" resultType="int" parameterType="String">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		  FROM USERS
		  WHERE USER_ID = #{user_id}
	</select>
	<!-- 회원가입 - 이메일 중복 확인 -->
	<select id="isUserEmailTaken" resultType="int" parameterType="String">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		  FROM USERS
		  WHERE USER_EMAIL = #{user_email}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findIdByEmail" resultType="String" parameterType="String">
		SELECT USER_ID FROM USERS WHERE USER_EMAIL = #{user_email}
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="findPwByIdAndEmail" resultType="String" parameterType="org.joonzis.domain.UsersVO">
		SELECT USER_PW FROM USERS WHERE USER_EMAIL = #{user_email} AND USER_ID = #{user_id}
	</select>
	
</mapper>